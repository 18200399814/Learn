/***************30道经典SQL面试题***************/

/*1.查询每个班学生数：
 *  现在有一张全校学生信息表student_table，这张表存储了每位学生的id、name(姓名)、class(班级)、sex(性别)
 *  以及一些其他信息，现在我们想知道每个班有多少学生，该怎么实现呢？
 *
 *（1）学生信息表：
 *  +----+-----------+--------+------+
 *  | id | name      | class  | sex  |
 *  +----+-----------+--------+------+
 *  |  1 | 王小凤    | 一班   | 女   |
 *  |  2 | 刘诗迪    | 一班   | 女   |
 *  |  3 | 李思雨    | 一班   | 女   |
 *  |  4 | 张文华    | 二班   | 男   |
 *  |  5 | 张青云    | 二班   | 女   |
 *  |  6 | 徐文杰    | 二班   | 男   |
 *  |  7 | 李智瑞    | 三班   | 男   |
 *  |  8 | 徐雨秋    | 三班   | 男   |
 *  |  9 | 孙皓然    | 三班   | 男   |
 *  | 10 | 李春山    | 三班   | 男   |
 *  +----+-----------+--------+------+
 */

-- （2）SQL语句：
select
	class,
	count(id) as student_number
from student_table
group by class;

/*（3）查询结果：
 *  +--------+----------------+
 *  | class  | student_number |
 *  +--------+----------------+
 *  | 一班   |              3 |
 *  | 二班   |              3 |
 *  | 三班   |              4 |
 *  +--------+----------------+
 */

/*2.查询每个班男女学生数：
 *  还是前面的全校学生信息表student_table，现在我们想知道每个班男生、女生分别有多少个？
 */

-- （1）SQL语句：
select
	class,
	sex,
	count(id) as student_number
from student_table
group by
	class,
	sex;

/*（2）查询结果：
 *  +--------+------+----------------+
 *  | class  | sex  | student_number |
 *  +--------+------+----------------+
 *  | 一班   | 女   |              3 |
 *  | 二班   | 男   |              2 |
 *  | 二班   | 女   |              1 |
 *  | 三班   | 男   |              4 |
 *  +--------+------+----------------+
 */
 
/*3.姓张的同学有多少个：
 *  还是前面的全校学生信息表student_table，现在我们想知道这张表中姓张的同学有多少个？
 */

-- （1）SQL语句：
select
	group_concat(name) as all_name,
	count(id) as student_number
from student_table
where name like "张%";

/*（2）查询结果：
 *  +---------------------+----------------+
 *  | all_name            | student_number |
 *  +---------------------+----------------+
 *  | 张文华,张青云       |              2 |
 *  +---------------------+----------------+
 */

/*4.筛选出id第3-5的同学：
 *还是前面的全校学生信息表student_table，现在我们要获取id从小到大排序以后第3-5位的同学的信息。
 */

-- （1）SQL语句：
select * from student_table order by id asc limit 2,3;

/*（2）查询结果：
 *  +----+-----------+--------+------+
 *  | id | name      | class  | sex  |
 *  +----+-----------+--------+------+
 *  |  3 | 李思雨    | 一班   | 女   |
 *  |  4 | 张文华    | 二班   | 男   |
 *  |  5 | 张青云    | 二班   | 女   |
 *  +----+-----------+--------+------+
 */
 
/*5.筛选出挂科的同学：
 *  现在有一张学生成绩表score_table，这张表存储了每位学生的id、name(姓名)、class(班级)、score(成绩)，
 *  现在我们想要把挂科(成绩小于60)的同学信息筛选出来。
 *
 *（1）学生成绩表：
 *  +----+-----------+--------+-------+
 *  | id | name      | class  | score |
 *  +----+-----------+--------+-------+
 *  |  1 | 王小凤    | 一班   |    88 |
 *  |  2 | 刘诗迪    | 一班   |    70 |
 *  |  3 | 李思雨    | 一班   |    92 |
 *  |  4 | 张文华    | 二班   |    55 |
 *  |  5 | 张青云    | 二班   |    77 |
 *  |  6 | 徐文杰    | 二班   |    77 |
 *  |  7 | 李智瑞    | 三班   |    56 |
 *  |  8 | 徐雨秋    | 三班   |    91 |
 *  |  9 | 孙皓然    | 三班   |    93 |
 *  | 10 | 李春山    | 三班   |    57 |
 *  +----+-----------+--------+-------+
 */

-- （2）SQL语句：
select * from score_table where score < 60;

/*（3）查询结果：
 *  +----+-----------+--------+-------+
 *  | id | name      | class  | score |
 *  +----+-----------+--------+-------+
 *  |  4 | 张文华    | 二班   |    55 |
 *  |  7 | 李智瑞    | 三班   |    56 |
 *  | 10 | 李春山    | 三班   |    57 |
 *  +----+-----------+--------+-------+
 */

/*6.筛选姓张的且挂科的同学：
 *  我们现在需要根据学生成绩表score_table查找出姓张的且挂科的同学的信息。
 */

-- （1）SQL语句：
select * from score_table where name like '张%' and score < 60;

/*（2）查询结果：
 *  +----+-----------+--------+-------+
 *  | id | name      | class  | score |
 *  +----+-----------+--------+-------+
 *  |  4 | 张文华    | 二班   |    55 |
 *  +----+-----------+--------+-------+
 */

/*7.查询销售冠获得次数：
 *  我们有一张表month_table记录了每月的销售冠军信息，这张表存储了每月销冠的id、name(姓名)、month_num(月份)，
 *  现在需要获取销冠次数超过2次的人以及其对应的做销冠次数。
 *
 *（1）月度销售冠军信息表：
 *  +------+-----------+-----------+
 *  | id   | name      | month_num |
 *  +------+-----------+-----------+
 *  | E002 | 王小凤    |         1 |
 *  | E001 | 张文华    |         2 |
 *  | E003 | 孙皓然    |         3 |
 *  | E001 | 张文华    |         4 |
 *  | E002 | 王小凤    |         5 |
 *  | E001 | 张文华    |         6 |
 *  | E004 | 李智瑞    |         7 |
 *  | E002 | 王小凤    |         8 |
 *  | E003 | 孙皓然    |         9 |
 *  +------+-----------+-----------+
 */

-- （2）SQL语句：
select
	name,
	count(id) as championship_num
from month_table
group by name
having count(id) > 2;      -- having中可以使用聚合函数，而where中不能使用聚合函数

/*（3）查询结果：
 *  +-----------+------------------+
 *  | name      | championship_num |
 *  +-----------+------------------+
 *  | 王小凤    |                3 |
 *  | 张文华    |                3 |
 *  +-----------+------------------+
 */

/*8.获取每个部门一整年业绩提升幅度：
 *  现在有一个月份销售额记录表sale_table，这个表记录了每年每月的销售额，现在我们想看下今年(2019年)，
 *  月销售额最高涨幅是多少？
 *
 *（1）销售额记录表：
 *  +----------+-----------+-------+
 *  | year_num | month_num | sales |
 *  +----------+-----------+-------+
 *  |     2019 |         1 |  2854 |
 *  |     2019 |         2 |  4772 |
 *  |     2019 |         3 |  3542 |
 *  |     2019 |         4 |  1336 |
 *  |     2019 |         5 |  3544 |
 *  |     2018 |         1 |  2293 |
 *  |     2018 |         2 |  2559 |
 *  |     2018 |         3 |  2597 |
 *  |     2018 |         4 |  2363 |
 *  +----------+-----------+-------+
 */

-- （2）SQL语句：
select 
	min(sales) as min_sales,
	max(sales) as max_sales,
	max(sales) - min(sales) as max_increment,
	(max(sales) - min(sales)) / min(sales) as growth
from sale_table
where year_num = 2019;

/*（3）查询结果：
 *  +-----------+-----------+---------------+--------+
 *  | min_sales | max_sales | max_increment | growth |
 *  +-----------+-----------+---------------+--------+
 *  |      1336 |      4772 |          3436 | 2.5719 |
 *  +-----------+-----------+---------------+--------+
 */

/*9*查找每科成绩大于70的学生：
 *我们有一张学生科目成绩表score_info_table，这张表记录了每一位同学每一科目的成绩，
 *每一位同学的每科成绩是一行，现在我们想要通过这张表获取到每科成绩都大于70分的学生。
 *
 *（1）学生科目成绩表：
 *  +------+-----------+---------+-------+
 *  | id   | name      | subject | score |
 *  +------+-----------+---------+-------+
 *  |    1 | 王小凤    | 语文    |    88 |
 *  |    2 | 张文华    | 语文    |    70 |
 *  |    3 | 徐雨秋    | 语文    |    92 |
 *  |    1 | 王小凤    | 数学    |    55 |
 *  |    2 | 张文华    | 数学    |    77 |
 *  |    3 | 徐雨秋    | 数学    |    77 |
 *  |    1 | 王小凤    | 英语    |    72 |
 *  |    2 | 张文华    | 英语    |    91 |
 *  |    3 | 徐雨秋    | 英语    |    93 |
 *  +------+-----------+---------+-------+
 */
 
-- （1）使用自连接查询实现：
select
	sc1.id,
	sc1.name,
	sc1.score as '语文',
	sc2.score as '数学',
	sc3.score as '英语'
from 
	score_info_table as sc1,
	score_info_table as sc2,
	score_info_table as sc3
where
	sc1.id = sc2.id
and sc1.subject = '语文'
and sc2.subject = '数学'
and sc1.id = sc3.id
and sc3.subject = '英语'
and sc1.score > 70
and sc2.score > 70
and sc3.score > 70;

-- （2）使用聚合函数实现：
select 
	id,
	name,
	group_concat(subject) as '科目',
	group_concat(score) as '分数' 
from score_info_table 
group by name 
having min(score) > 70;

/*（3）自连接查询查询结果：
 *  +------+-----------+--------+--------+--------+
 *  | id   | name      | 语文   | 数学   | 英语   |
 *  +------+-----------+--------+--------+--------+
 *  |    3 | 徐雨秋    |     92 |     77 |     93 |
 *  +------+-----------+--------+--------+--------+
 *
 *（4）使用聚合函数查询结果：
 *  +------+-----------+----------------------+----------+
 *  | id   | name      | 科目                 | 分数     |
 *  +------+-----------+----------------------+----------+
 *  |    3 | 徐雨秋    | 语文,数学,英语       | 92,77,93 |
 *  +------+-----------+----------------------+----------+
 */

/*10.删除重复值：
 *现在有一个学生信息表student_info_table，这张表存储了每位学生id、name(姓名)、class(班级)、grade(年级)，
 *现在我们想获取这个学校所有年级以及所有班级的信息，即哪些年级有哪些班级，该怎么获取？
 *
 *（1）学生信息表：
 *  +----+-----------+--------+-----------+
 *  | id | name      | class  | grade     |
 *  +----+-----------+--------+-----------+
 *  |  1 | 王小凤    | 一班   | 一年级    |
 *  |  2 | 刘诗迪    | 一班   | 二年级    |
 *  |  3 | 李思雨    | 一班   | 一年级    |
 *  |  4 | 张文华    | 二班   | 二年级    |
 *  |  5 | 张青云    | 二班   | 一年级    |
 *  |  6 | 徐文杰    | 二班   | 二年级    |
 *  |  7 | 李智瑞    | 一班   | 一年级    |
 *  |  8 | 徐雨秋    | 二班   | 二年级    |
 *  |  9 | 孙皓然    | 一班   | 一年级    |
 *  +----+-----------+--------+-----------+
 */
 
-- （2）SQL语句：
select 
	grade "年级",
	class as '班级' 
from student_info_table 
group by 
	grade,
	class
order by grade;

/*（3）查询结果：
 *  +-----------+--------+
 *  | 年级      | 班级   |
 *  +-----------+--------+
 *  | 一年级    | 一班   |
 *  | 一年级    | 二班   |
 *  | 二年级    | 一班   |
 *  | 二年级    | 二班   |
 *  +-----------+--------+
 */